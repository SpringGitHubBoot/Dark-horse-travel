<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">


    <security:http security="none" pattern="/pages/login.html"></security:http>
    <security:http security="none" pattern="/css/**"></security:http>
    <security:http security="none" pattern="/js/**"></security:http>
    <security:http security="none" pattern="/img/**"></security:http>
    <security:http security="none" pattern="/plugins/**"></security:http>
    <security:http security="none" pattern="/template/**"></security:http>

    <security:http auto-config="true" use-expressions="true">

        <security:headers>
            <!--设置在页面可以通过iframe访问受保护的页面，默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>

        <security:form-login login-page="/pages/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/pages/main.html"
                             always-use-default-target="true"
                             authentication-failure-url="/pages/login.html"/>
        <!--配置CSRF拦截器不可用，http的子标签-->
        <security:csrf disabled="true"></security:csrf>

        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>

        <security:logout logout-success-url="/pages/login.html" logout-url="/logout.do"
                         invalidate-session="true"/>
    </security:http>

    <!--配置密码加密对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <security:authentication-manager>

        <security:authentication-provider user-service-ref="securityService">
            <!--在认证管理器的，认证提供者中指定密码加密策略-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:global-method-security pre-post-annotations="enabled"
    ></security:global-method-security>
</beans>